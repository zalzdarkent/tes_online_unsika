services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
      - ./storage/app/public:/var/www/storage/app/public
      - ./php-production.ini:/usr/local/etc/php/conf.d/php-production.ini
      - ./docker/php-fpm-optimized.conf:/usr/local/etc/php-fpm.d/www.conf
    depends_on:
      - mysql
      - redis
    networks:
      - laravel

  queue-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-queue
    restart: unless-stopped
    working_dir: /var/www
    command: php artisan queue:work --sleep=3 --tries=3 --timeout=60
    volumes:
      - .:/var/www
      - ./php-production.ini:/usr/local/etc/php/conf.d/php-production.ini
    depends_on:
      - app
      - mysql
      - redis
    networks:
      - laravel

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-scheduler
    restart: unless-stopped
    working_dir: /var/www
    command: /bin/sh -c "while true; do php artisan schedule:run; sleep 60; done"
    volumes:
      - .:/var/www
      - ./php-production.ini:/usr/local/etc/php/conf.d/php-production.ini
    depends_on:
      - app
      - mysql
      - redis
    networks:
      - laravel

  webserver:
    image: nginx:alpine
    container_name: laravel-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www
      - ./docker/nginx-optimized.conf:/etc/nginx/conf.d/default.conf
      - ./storage/app/public:/var/www/storage/app/public
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - app
    networks:
      - laravel

  mysql:
    image: mysql:8.0
    container_name: laravel-mysql
    restart: unless-stopped
    command: --innodb-buffer-pool-size=256M --innodb-log-file-size=32M --innodb-log-buffer-size=16M --max-connections=50 --innodb-flush-log-at-trx-commit=2 --query-cache-size=0 --skip-performance-schema
    environment:
      MYSQL_DATABASE: sql_onlinetest
      MYSQL_ROOT_PASSWORD: TpFBSyz35Fmc2ALT
      MYSQL_PASSWORD: TpFBSyz35Fmc2ALT
      MYSQL_USER: sql_onlinetest
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: laravel-phpmyadmin
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: TpFBSyz35Fmc2ALT
    volumes:
      - ./php-production.ini:/usr/local/etc/php/conf.d/php-production.ini
    ports:
      - "5090:80"
    networks:
      - laravel
    depends_on:
      - mysql

  redis:
    image: redis:alpine
    container_name: tes_online_unsika-redis-1
    ports:
      - "6379:6379"
    networks:
      - laravel

volumes:
  mysql-data:

networks:
  laravel:
    driver: bridge
